name: Deployment to Cloud Run Multi-Environment Workflow

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment. 

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: ./src/env
          mode: ${{ inputs.environment }}
          load-mode: strict     

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          project_id: ${{ env.GCP_PROJECT_ID }}
          workload_identity_provider: '${{ env.GCP_SA_WIF_PROVIDER }}'
          service_account: '${{ env.GCP_SA_WIF_SA }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          file: ./src/Dockerfile
          push: true 
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}          

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          flags: '--port=8081 --service-account=${{ env.CLOUD_RUN_SA }}'